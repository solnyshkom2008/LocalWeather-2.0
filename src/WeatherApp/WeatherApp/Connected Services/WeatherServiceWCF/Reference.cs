//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeatherApp.WeatherServiceWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherParameter", Namespace="http://schemas.datacontract.org/2004/07/OpenWeather")]
    [System.SerializableAttribute()]
    public partial class WeatherParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherApp.WeatherServiceWCF.DataFormat FormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherApp.WeatherServiceWCF.RequestType RequestTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherApp.WeatherServiceWCF.UnitType UnitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string qField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherApp.WeatherServiceWCF.DataFormat Format {
            get {
                return this.FormatField;
            }
            set {
                if ((this.FormatField.Equals(value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lat {
            get {
                return this.LatField;
            }
            set {
                if ((object.ReferenceEquals(this.LatField, value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lon {
            get {
                return this.LonField;
            }
            set {
                if ((object.ReferenceEquals(this.LonField, value) != true)) {
                    this.LonField = value;
                    this.RaisePropertyChanged("Lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherApp.WeatherServiceWCF.RequestType RequestType {
            get {
                return this.RequestTypeField;
            }
            set {
                if ((this.RequestTypeField.Equals(value) != true)) {
                    this.RequestTypeField = value;
                    this.RaisePropertyChanged("RequestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherApp.WeatherServiceWCF.UnitType UnitType {
            get {
                return this.UnitTypeField;
            }
            set {
                if ((this.UnitTypeField.Equals(value) != true)) {
                    this.UnitTypeField = value;
                    this.RaisePropertyChanged("UnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string q {
            get {
                return this.qField;
            }
            set {
                if ((object.ReferenceEquals(this.qField, value) != true)) {
                    this.qField = value;
                    this.RaisePropertyChanged("q");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataFormat", Namespace="http://schemas.datacontract.org/2004/07/OpenWeather")]
    public enum DataFormat : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        jSon = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Xml = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Html = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeatherObject = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestType", Namespace="http://schemas.datacontract.org/2004/07/OpenWeather")]
    public enum RequestType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByCityName = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByCoordinates = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByCityId = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnitType", Namespace="http://schemas.datacontract.org/2004/07/OpenWeather")]
    public enum UnitType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Imperial = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Metrics = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherObject", Namespace="http://schemas.datacontract.org/2004/07/OpenWeather")]
    [System.SerializableAttribute()]
    public partial class WeatherObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string baseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherApp.WeatherServiceWCF.Clouds cloudsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int codField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherApp.WeatherServiceWCF.Coord coordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int dtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherApp.WeatherServiceWCF.Main mainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherApp.WeatherServiceWCF.Rain rainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherApp.WeatherServiceWCF.Sys sysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherApp.WeatherServiceWCF.Weather[] weatherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherApp.WeatherServiceWCF.Wind windField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string @base {
            get {
                return this.baseField;
            }
            set {
                if ((object.ReferenceEquals(this.baseField, value) != true)) {
                    this.baseField = value;
                    this.RaisePropertyChanged("base");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherApp.WeatherServiceWCF.Clouds clouds {
            get {
                return this.cloudsField;
            }
            set {
                if ((object.ReferenceEquals(this.cloudsField, value) != true)) {
                    this.cloudsField = value;
                    this.RaisePropertyChanged("clouds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cod {
            get {
                return this.codField;
            }
            set {
                if ((this.codField.Equals(value) != true)) {
                    this.codField = value;
                    this.RaisePropertyChanged("cod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherApp.WeatherServiceWCF.Coord coord {
            get {
                return this.coordField;
            }
            set {
                if ((object.ReferenceEquals(this.coordField, value) != true)) {
                    this.coordField = value;
                    this.RaisePropertyChanged("coord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int dt {
            get {
                return this.dtField;
            }
            set {
                if ((this.dtField.Equals(value) != true)) {
                    this.dtField = value;
                    this.RaisePropertyChanged("dt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherApp.WeatherServiceWCF.Main main {
            get {
                return this.mainField;
            }
            set {
                if ((object.ReferenceEquals(this.mainField, value) != true)) {
                    this.mainField = value;
                    this.RaisePropertyChanged("main");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherApp.WeatherServiceWCF.Rain rain {
            get {
                return this.rainField;
            }
            set {
                if ((object.ReferenceEquals(this.rainField, value) != true)) {
                    this.rainField = value;
                    this.RaisePropertyChanged("rain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherApp.WeatherServiceWCF.Sys sys {
            get {
                return this.sysField;
            }
            set {
                if ((object.ReferenceEquals(this.sysField, value) != true)) {
                    this.sysField = value;
                    this.RaisePropertyChanged("sys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherApp.WeatherServiceWCF.Weather[] weather {
            get {
                return this.weatherField;
            }
            set {
                if ((object.ReferenceEquals(this.weatherField, value) != true)) {
                    this.weatherField = value;
                    this.RaisePropertyChanged("weather");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherApp.WeatherServiceWCF.Wind wind {
            get {
                return this.windField;
            }
            set {
                if ((object.ReferenceEquals(this.windField, value) != true)) {
                    this.windField = value;
                    this.RaisePropertyChanged("wind");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clouds", Namespace="http://schemas.datacontract.org/2004/07/OpenWeather")]
    [System.SerializableAttribute()]
    public partial class Clouds : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int allField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int all {
            get {
                return this.allField;
            }
            set {
                if ((this.allField.Equals(value) != true)) {
                    this.allField = value;
                    this.RaisePropertyChanged("all");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Coord", Namespace="http://schemas.datacontract.org/2004/07/OpenWeather")]
    [System.SerializableAttribute()]
    public partial class Coord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double latField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double lonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double lat {
            get {
                return this.latField;
            }
            set {
                if ((this.latField.Equals(value) != true)) {
                    this.latField = value;
                    this.RaisePropertyChanged("lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double lon {
            get {
                return this.lonField;
            }
            set {
                if ((this.lonField.Equals(value) != true)) {
                    this.lonField = value;
                    this.RaisePropertyChanged("lon");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Main", Namespace="http://schemas.datacontract.org/2004/07/OpenWeather")]
    [System.SerializableAttribute()]
    public partial class Main : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int humidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int pressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double tempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double temp_maxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double temp_minField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int humidity {
            get {
                return this.humidityField;
            }
            set {
                if ((this.humidityField.Equals(value) != true)) {
                    this.humidityField = value;
                    this.RaisePropertyChanged("humidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int pressure {
            get {
                return this.pressureField;
            }
            set {
                if ((this.pressureField.Equals(value) != true)) {
                    this.pressureField = value;
                    this.RaisePropertyChanged("pressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double temp {
            get {
                return this.tempField;
            }
            set {
                if ((this.tempField.Equals(value) != true)) {
                    this.tempField = value;
                    this.RaisePropertyChanged("temp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double temp_max {
            get {
                return this.temp_maxField;
            }
            set {
                if ((this.temp_maxField.Equals(value) != true)) {
                    this.temp_maxField = value;
                    this.RaisePropertyChanged("temp_max");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double temp_min {
            get {
                return this.temp_minField;
            }
            set {
                if ((this.temp_minField.Equals(value) != true)) {
                    this.temp_minField = value;
                    this.RaisePropertyChanged("temp_min");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rain", Namespace="http://schemas.datacontract.org/2004/07/OpenWeather")]
    [System.SerializableAttribute()]
    public partial class Rain : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int @__invalid_name__3hField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int @__invalid_name__3h {
            get {
                return this.@__invalid_name__3hField;
            }
            set {
                if ((this.@__invalid_name__3hField.Equals(value) != true)) {
                    this.@__invalid_name__3hField = value;
                    this.RaisePropertyChanged("__invalid_name__3h");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sys", Namespace="http://schemas.datacontract.org/2004/07/OpenWeather")]
    [System.SerializableAttribute()]
    public partial class Sys : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sunriseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sunsetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double message {
            get {
                return this.messageField;
            }
            set {
                if ((this.messageField.Equals(value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sunrise {
            get {
                return this.sunriseField;
            }
            set {
                if ((this.sunriseField.Equals(value) != true)) {
                    this.sunriseField = value;
                    this.RaisePropertyChanged("sunrise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sunset {
            get {
                return this.sunsetField;
            }
            set {
                if ((this.sunsetField.Equals(value) != true)) {
                    this.sunsetField = value;
                    this.RaisePropertyChanged("sunset");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Wind", Namespace="http://schemas.datacontract.org/2004/07/OpenWeather")]
    [System.SerializableAttribute()]
    public partial class Wind : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int degField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double speedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int deg {
            get {
                return this.degField;
            }
            set {
                if ((this.degField.Equals(value) != true)) {
                    this.degField = value;
                    this.RaisePropertyChanged("deg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double speed {
            get {
                return this.speedField;
            }
            set {
                if ((this.speedField.Equals(value) != true)) {
                    this.speedField = value;
                    this.RaisePropertyChanged("speed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Weather", Namespace="http://schemas.datacontract.org/2004/07/OpenWeather")]
    [System.SerializableAttribute()]
    public partial class Weather : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mainField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string icon {
            get {
                return this.iconField;
            }
            set {
                if ((object.ReferenceEquals(this.iconField, value) != true)) {
                    this.iconField = value;
                    this.RaisePropertyChanged("icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string main {
            get {
                return this.mainField;
            }
            set {
                if ((object.ReferenceEquals(this.mainField, value) != true)) {
                    this.mainField = value;
                    this.RaisePropertyChanged("main");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherServiceWCF.IOpenWeatherService")]
    public interface IOpenWeatherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpenWeatherService/GetWeather", ReplyAction="http://tempuri.org/IOpenWeatherService/GetWeatherResponse")]
        string GetWeather(WeatherApp.WeatherServiceWCF.WeatherParameter Param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpenWeatherService/GetWeather", ReplyAction="http://tempuri.org/IOpenWeatherService/GetWeatherResponse")]
        System.Threading.Tasks.Task<string> GetWeatherAsync(WeatherApp.WeatherServiceWCF.WeatherParameter Param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpenWeatherService/GetWeatherobject", ReplyAction="http://tempuri.org/IOpenWeatherService/GetWeatherobjectResponse")]
        WeatherApp.WeatherServiceWCF.WeatherObject GetWeatherobject(WeatherApp.WeatherServiceWCF.WeatherParameter Param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpenWeatherService/GetWeatherobject", ReplyAction="http://tempuri.org/IOpenWeatherService/GetWeatherobjectResponse")]
        System.Threading.Tasks.Task<WeatherApp.WeatherServiceWCF.WeatherObject> GetWeatherobjectAsync(WeatherApp.WeatherServiceWCF.WeatherParameter Param);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOpenWeatherServiceChannel : WeatherApp.WeatherServiceWCF.IOpenWeatherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OpenWeatherServiceClient : System.ServiceModel.ClientBase<WeatherApp.WeatherServiceWCF.IOpenWeatherService>, WeatherApp.WeatherServiceWCF.IOpenWeatherService {
        
        public OpenWeatherServiceClient() {
        }
        
        public OpenWeatherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OpenWeatherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OpenWeatherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OpenWeatherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetWeather(WeatherApp.WeatherServiceWCF.WeatherParameter Param) {
            return base.Channel.GetWeather(Param);
        }
        
        public System.Threading.Tasks.Task<string> GetWeatherAsync(WeatherApp.WeatherServiceWCF.WeatherParameter Param) {
            return base.Channel.GetWeatherAsync(Param);
        }
        
        public WeatherApp.WeatherServiceWCF.WeatherObject GetWeatherobject(WeatherApp.WeatherServiceWCF.WeatherParameter Param) {
            return base.Channel.GetWeatherobject(Param);
        }
        
        public System.Threading.Tasks.Task<WeatherApp.WeatherServiceWCF.WeatherObject> GetWeatherobjectAsync(WeatherApp.WeatherServiceWCF.WeatherParameter Param) {
            return base.Channel.GetWeatherobjectAsync(Param);
        }
    }
}
